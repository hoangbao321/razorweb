@*
    Model:
      - currentPage:int - Trang hiện tại
      - countPages:int - tổng số trang
      - generateUrl:delegate Func<int?, string> trả về URL tương ứng với trang p (1,2,3 ...)
*@

@model cs58_Razor_09.Helpers.PagingModel

@{
    int currentPage = Model.currentPage;
    int countPages = Model.countPages;
    var generateUrl = Model.generateUrl;
    var Search = Model.Search;
    var StartDay = Model.StartDay;
    var EndDay = Model.EndDay;

    if (currentPage > countPages)
        currentPage = countPages;

    if (countPages <= 1) return;


    int? preview = null;
    int? next = null;

    if (currentPage > 1)
        preview = currentPage - 1;

    if (currentPage < countPages)
        next = currentPage + 1;

    // Các trang hiện thị trong điều hướng
    List<int> pagesRanges = new List<int>();


    int delta = 5;             // Số trang mở rộng về mỗi bên trang hiện tại
    int remain = delta * 2;    // Số trang hai bên trang hiện tại

    pagesRanges.Add(currentPage);
    // Các trang phát triển về hai bên trang hiện tại
    for (int i = 1; i <= delta; i++)
    {
        if (currentPage + i <= countPages)
        {
            pagesRanges.Add(currentPage + i);
            remain--;
        }

        if (currentPage - i >= 1)
        {
            pagesRanges.Insert(0, currentPage - i);
            remain--;
        }
    }
    // Xử lý thêm vào các trang cho đủ remain
    //(xảy ra ở đầu mút của khoảng trang không đủ trang chèn  vào)
    if (remain > 0)
    {
        if (pagesRanges[0] == 1)
        {
            for (int i = 1; i <= remain; i++)
            {
                if (pagesRanges.Last() + 1 <= countPages)
                {
                    pagesRanges.Add(pagesRanges.Last() + 1);
                }
            }
        }
        else
        {
            for (int i = 1; i <= remain; i++)
            {
                if (pagesRanges.First() - 1 > 1)
                {
                    pagesRanges.Insert(0, pagesRanges.First() - 1);
                }
            }
        }
    }

}

@* PHÁT SINH HTML*@
<ul class="pagination">
    <!-- Previous page link -->
    @if (preview != null)
    {
        <li>
            <a class="page-link" href="@generateUrl(preview,Search,StartDay,EndDay)">Trang trước</a>
        </li>

    }

    <!-- Numbered page links -->        
    @foreach (var pageitem in pagesRanges)
    {
        if (pageitem != currentPage)
        {
            <li>
                <a class="page-link" href="@generateUrl(pageitem,Search,StartDay,EndDay)">
                    @pageitem
                </a>
            </li>

        }
        else
        {
            <li class="page-item active" >
                <a class="page-link" href="#">@pageitem </a>

            </li>
        }
    }
    <!-- Next page link -->
    @if (next != null)
    {
        <li>
            <a class="page-link" href="@generateUrl(next,Search,StartDay,EndDay)">Trang sau</a>
        </li>
    }
</ul>

